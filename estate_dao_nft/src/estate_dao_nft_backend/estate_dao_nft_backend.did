type Account = record { owner : principal; subaccount : opt vec nat8 };
type AdditionalMetadata = record {
  documents : vec vec record { text; text };
  property_details : opt PropertyDetails;
  financial_details : opt FinancialDetails;
  market_details : opt MarketDetails;
};
type CollectionMetadata = record {
  status : Status;
  supply_cap : nat64;
  image_uri : text;
  owner : text;
  desc : text;
  additional_metadata : opt AdditionalMetadata;
  name : text;
  property_images : vec text;
  treasury_account : text;
  primary_sale_happened : bool;
  price : nat64;
  is_initialised : bool;
  total_supply : nat64;
};
type FinancialDetails = record {
  total_monthly_cost : opt float32;
  monthly_cash_flow : opt float32;
  property_insurance : opt float32;
  investment : opt InvestmentFinancials;
  expense_to_income_ratio : opt float32;
  rents : opt RentFinancials;
  returns : opt ReturnsFinancials;
};
type FormMetadata = record {
  supply_cap : nat64;
  image_uri : text;
  owner : text;
  desc : text;
  additional_metadata : opt AdditionalMetadata;
  name : text;
  property_images : vec text;
  price : nat64;
  treasury : text;
};
type InvestmentFinancials = record {
  initial_maintenance_reserve : opt float32;
  underlying_asset_price : opt float32;
  platform_closing_fee : opt float32;
  min_investment : opt nat64;
};
type MarketDetails = record {
  country : opt text;
  city : opt text;
  description : opt text;
  state : opt text;
  average_rent : opt nat32;
  median_home_sale_price : opt nat32;
  coordinates : opt text;
  annual_popullation_growth : opt nat32;
};
type Metadata = record {
  supply_cap : nat64;
  nft_token_id : text;
  desc : text;
  collection_name : text;
  nft_uri : text;
  total_supply : nat64;
  symbol : text;
};
type PropertyDetails = record {
  year_built : opt nat32;
  occupied : opt bool;
  crime_score : opt nat32;
  monthly_rent : opt float32;
  beds : opt nat32;
  affordability : opt float32;
  square_footage : opt float32;
  flood_zone : opt bool;
  price_per_sq_foot : opt float32;
  baths : opt nat32;
  school_score : opt nat32;
  last_renovated : opt float32;
};
type RentFinancials = record {
  llc_monthly_franchise_tax : opt float32;
  vacancy_rate : opt float32;
  property_taxes : opt float32;
  property_managment_fee : opt float32;
  projected_rent : opt float32;
  monthly_utiliiies : opt float32;
};
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : vec nat8; Err : text };
type Result_10 = variant { Ok : PropertyDetails; Err : text };
type Result_11 = variant { Ok : SaleData; Err : text };
type Result_12 = variant { Ok : record { nat64; nat64 }; Err : text };
type Result_13 = variant { Ok : Account; Err : text };
type Result_2 = variant { Ok : principal; Err : text };
type Result_3 = variant { Ok : nat64; Err : text };
type Result_4 = variant { Ok : CollectionMetadata; Err : text };
type Result_5 = variant { Ok : Status; Err : text };
type Result_6 = variant { Ok : MarketDetails; Err : text };
type Result_7 = variant { Ok : FinancialDetails; Err : text };
type Result_8 = variant { Ok : Metadata; Err : text };
type Result_9 = variant { Ok : record { text; nat64; nat64 }; Err : text };
type ReturnsFinancials = record {
  average_5_year_roi : opt float32;
  yields : opt float32;
  total_5_year_irr : opt float32;
  projected_appreciation : opt float32;
  cap_rate : opt float32;
};
type SaleData = record {
  status : SaleStatus;
  nft_token_id : text;
  time : Timestamp;
  buyer : Account;
  amount : nat64;
};
type SaleStatus = variant { Init; Complete; Incomplete };
type Status = variant { Ended; Live; Draft; Upcoming };
type Timestamp = record { timestamp_nanos : nat64 };
service : {
  add_collection_image : (text) -> (Result);
  collection_image : () -> (vec text) query;
  create_accountid : (principal) -> (Result_1) query;
  create_escrow_accountid : (principal) -> (Result_1) query;
  get_NNS_account : () -> (Result_2) query;
  get_balance : (principal) -> (Result_3);
  get_collection_metadata : () -> (Result_4) query;
  get_collection_status : () -> (Result_5) query;
  get_financial_details : () -> (Result_6) query;
  get_market_details : () -> (Result_7) query;
  get_metadata : (text) -> (Result_8);
  get_payment_details : () -> (Result_9) query;
  get_property_details : () -> (Result_10) query;
  get_reprocess_mint : () -> (vec principal);
  get_reprocess_refund : () -> (vec principal);
  get_reprocess_transfer : () -> (vec principal);
  get_sale_data : (text) -> (Result_11) query;
  get_total_invested : () -> (nat64) query;
  get_user_sale_balance : (principal) -> (Result_12);
  icrc7_description : () -> (text) query;
  icrc7_image : () -> (text) query;
  icrc7_name : () -> (text) query;
  icrc7_owner_of : (text) -> (Result_13);
  icrc7_total_supply : () -> (nat64) query;
  init_collection : (FormMetadata) -> (Result);
  mint : (text, text, text, principal) -> (Result);
  mint_approved_nfts : (principal) -> (Result);
  primary_sale : () -> (Result);
  refund_for_user_by_controller : (principal) -> (Result);
  refund_user_tokens : (principal) -> (Result);
  reprocess_accept_transfer : () -> (Result);
  reprocess_refund : () -> (Result);
  sale_accepted : () -> (Result);
  sale_confirmed_mint : () -> (Result);
  sale_confirmed_transfer : () -> (Result);
  sale_rejected : () -> (Result);
  transfer_user_tokens : (principal) -> (Result);
  update_NNS_account : (principal) -> (Result);
  update_basic_details : (opt text, opt text, opt Status) -> (Result);
  update_doc_details : (vec vec record { text; text }) -> (Result);
  update_financial_details : (FinancialDetails) -> (Result);
  update_market_details : (MarketDetails) -> (Result);
  update_property_details : (PropertyDetails) -> (Result);
}