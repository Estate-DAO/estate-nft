type Account = record { owner : principal; subaccount : opt vec nat8 };
type AdditionalMetadata = record {
  documents : vec vec record { text; text };
  property_details : opt PropertyDetails;
  financial_details : opt FinancialDetails;
  market_details : opt MarketDetails;
};
type ApprovedResponse = variant { StrResp : text; CanisterId : CanisterIds };
type CanisterIds = record {
  minter_canister : principal;
  asset_canister : principal;
};
type FinancialDetails = record {
  total_monthly_cost : opt float32;
  monthly_cash_flow : opt float32;
  property_insurance : opt float32;
  investment : opt InvestmentFinancials;
  expense_to_income_ratio : opt float32;
  rents : opt RentFinancials;
  returns : opt ReturnsFinancials;
};
type FormMetadata = record {
  supply_cap : nat64;
  image_uri : text;
  owner : text;
  desc : text;
  additional_metadata : opt AdditionalMetadata;
  name : text;
  property_images : vec text;
  price : nat64;
  treasury : text;
};
type InvestmentFinancials = record {
  initial_maintenance_reserve : opt float32;
  underlying_asset_price : opt float32;
  platform_closing_fee : opt float32;
  min_investment : opt nat64;
};
type MarketDetails = record {
  country : opt text;
  city : opt text;
  description : opt text;
  state : opt text;
  average_rent : opt nat32;
  median_home_sale_price : opt nat32;
  coordinates : opt text;
  annual_popullation_growth : opt nat32;
};
type Metadata = record {
  supply_cap : nat64;
  nft_token_id : text;
  desc : text;
  collection_name : text;
  nft_uri : text;
  total_supply : nat64;
  symbol : text;
};
type PropertyDetails = record {
  year_built : opt nat32;
  occupied : opt bool;
  crime_score : opt nat32;
  monthly_rent : opt float32;
  beds : opt nat32;
  affordability : opt float32;
  square_footage : opt float32;
  flood_zone : opt bool;
  price_per_sq_foot : opt float32;
  baths : opt nat32;
  school_score : opt nat32;
  last_renovated : opt float32;
};
type RentFinancials = record {
  llc_monthly_franchise_tax : opt float32;
  vacancy_rate : opt float32;
  property_taxes : opt float32;
  property_managment_fee : opt float32;
  projected_rent : opt float32;
  monthly_utiliiies : opt float32;
};
type Result = variant { Ok : ApprovedResponse; Err : text };
type Result_1 = variant { Ok : vec principal; Err : text };
type Result_2 = variant { Ok : vec CanisterIds; Err : text };
type Result_3 = variant { Ok : vec nat8; Err : text };
type Result_4 = variant { Ok : nat64; Err : text };
type Result_5 = variant { Ok : FormMetadata; Err : text };
type Result_6 = variant { Ok : Metadata; Err : text };
type Result_7 = variant { Ok : record { nat64; nat64 }; Err : text };
type Result_8 = variant { Ok : SaleData; Err : text };
type Result_9 = variant { Ok : text; Err : text };
type ReturnsFinancials = record {
  average_5_year_roi : opt float32;
  yields : opt float32;
  total_5_year_irr : opt float32;
  projected_appreciation : opt float32;
  cap_rate : opt float32;
};
type SaleData = record {
  status : SaleStatus;
  nft_token_id : text;
  time : Timestamp;
  buyer : Account;
  amount : nat64;
};
type SaleStatus = variant { Init; Complete; Incomplete };
type Status = variant { Ended; Live; Draft; Upcoming };
type Timestamp = record { timestamp_nanos : nat64 };
service : {
  approve_collection : (nat16, bool) -> (Result);
  filter_status : (Status) -> (Result_1);
  get_all_canisters : () -> (Result_2) query;
  get_all_minter_canisters : () -> (Result_1);
  get_escrow_balance : (principal, principal) -> (Result_4);
  get_form_list : () -> (vec record { nat16; FormMetadata });
  get_form_metadata : (nat16) -> (Result_5);
  get_nft_metadata : (principal, text) -> (Result_6);
  get_sale_balance : (principal, principal) -> (Result_7);
  get_sale_data : (principal, text) -> (Result_8);
  grant_commit_permission : (principal, principal) -> (Result_9);
  init_asset_wasm : (vec nat8) -> (Result_9);
  init_form_metadata : (FormMetadata) -> (Result_9);
  init_minter_wasm : (vec nat8) -> (Result_9);
  revoke_commit_permission : (principal, principal) -> (Result_9);
  sale_accept : (principal) -> (Result_9);
  sale_confirmed_accept_payment : (principal) -> (Result_9);
  sale_confirmed_mint : (principal) -> (Result_9);
  sale_confirmed_refund : (principal) -> (Result_9);
  update_key : (text) -> (Result_9);
  verify_key : (text) -> (bool) query;
}